Question no. 1 
solution
class Shape
{
private int width, height;

public int getWidth()
{
  return width;
}

public void setWidth(int width)
{
	this.width=width;
}

public int getHeight()
{
return height;
}

public void setHeight(int height)
{
this.height=height;
}
}

public class Demo
{
public static void main(String arg [])
{
	shape s1 = new shape();
	s1.setWidth(90);
	s1.setHeight(10);
	System.out.println(s1.getWidth());
	System.out.println(s1.getHeight());
}
}



Question no. 2
 solution

class emp
{
private static int cnt=10;

public static int getCnt()
{
return cnt;
}

}

public class Sample
{
public static void main(String arg[])
{
System.out.println(emp.getCnt());
}

}


Q3
solution

import java.lang.*;

class Emp
{
private static int cnt=10;

public static int getCnt()
{
return cnt;
}

}

public class Sample
{
public static void main(String arg[])
{
Emp em1= new Emp();
System.out.println(em1.getCnt());
}

}


Q4
solution
class Demoob
{
	private int num;

	public int getNum() {
		return num;
	}

	public void setNum(int num) {
		this.num = num;
	}

}
public class Pattern
{	
	public static void main(String[] args)
	{
	Demoob obj1 = new Demoob(); 
	Demoob abc2; 
	abc2= obj1; 
	obj1 = new Demoob();
	
	}
	
}

Q5
solution
package coding_foundation;
import java.util.*;

class A
{
	private int num;
	private static int num1;
	
	public int getNum() {
		return num;
	}
	public void setNum(int num) {
		this.num = num;
	}
	public static void setNum1(int num1) {
		A.num1 = num1;
	}
	public static int getNum1()
	{
		return A.num1;
	}
}
class B
{
	private int num;
	public static int num1;

	public int getNum() {
		return num;
	}

	public void setNum(int num) {
		this.num = num;
	}
}
class C
{
	private int num;
	public static int num1;
	
	public int getNum() {
		return num;
	}

	public void setNum(int num) {
		this.num = num;
	}
}

public class pattern
{
	public static void main(String [] args)
	{
			A obj1=new A();
			obj1.setNum(100);
			System.out.println(obj1.getNum());
			B obj2 = new B();
			obj2.setNum(100);
			System.out.println(obj2.getNum());
			C obj3 = new C();
			obj3.setNum(100);
			System.out.println(obj3.getNum());
			A.setNum1(100);
			B.num1 = 100;
			C.num1 =100;
			System.out.println(A.getNum1());
			System.out.println(B.num1);
			System.out.println(C.num1);
			
			
	}
	
	
}

Q6
solution
package coding_foundation;
import java.util.*;

class A
{
	private int num;
	private static int num1;
	
	public int getNum() {
		return num;
	}
	public void setNum(int num) {
		this.num = num;
	}
	public static void setNum1(int num1) {
		A.num1 = num1;
	}
	public static int getNum1()
	{
		return A.num1;
	}
	static
	{
		System.out.println("inside A");
	}
}
class B
{
	private int num;
	public static int num1;

	public int getNum() {
		return num;
	}

	public void setNum(int num) {
		this.num = num;
	}
	static
	{
		System.out.println("inside B");
	}
}
class C
{
	private int num;
	public static int num1;
	
	public int getNum() {
		return num;
	}

	public void setNum(int num) {
		this.num = num;
	}
	static
	{
		System.out.println("inside C");
	}
}

public class pattern
{
	public static void main(String [] args)
	{
			A obj1=new A();
			obj1.setNum(100);
			System.out.println(obj1.getNum());
			B obj2 = new B();
			obj2.setNum(100);
			System.out.println(obj2.getNum());
			C obj3 = new C();
			obj3.setNum(100);
			System.out.println(obj3.getNum());
			A.setNum1(100);
			B.num1 = 100;
			C.num1 =100;
			System.out.println(A.getNum1());
			System.out.println(B.num1);
			System.out.println(C.num1);
			
			
	}
	static
	{
		System.out.println("inside main");
	}
	
}